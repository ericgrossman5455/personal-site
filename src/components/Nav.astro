---
import { Icon } from 'astro-icon';

import navData from '../data/navData';
---

<nav id="primary-nav" aria-expanded="true">
	<button class="nav-toggle" title="Navigation" aria-label="Navigation" aria-controls="primary-nav">
		<span class="visually-hidden">Navigation</span>
		<Icon name="hamburger_menu" />
	</button>
	<div class="placeholder">
		<Icon name="hamburger_menu" />
	</div>

	<div class="directory">
		{
			navData.map((page) => (
				<a href={page.path} title={page.name} aria-label={page.name} data-navLink>
					<span class="visually-hidden">{page.name}</span>
					<Icon name={page.name.toLowerCase()} />
				</a>
			))
		}
	</div>

	<button class="notifications" title="Notifications" aria-label="Notifications" data-navLink>
		<span class="visually-hidden">Notifications</span>
		<Icon name="notifications" />
	</button>
</nav>

<style is:global lang="scss">
	:root {
		--nav-width: 70px;
	}
	nav {
		$icon-width: 35px;
		$vert-padding: 20px;

		grid-area: nav;
		position: sticky;
		top: 0;
		display: flex;
		flex-direction: column;
		row-gap: 65px;
		padding: $vert-padding 0;
		align-items: center;
		justify-content: space-between;
		overflow-y: auto;
		line-height: 0;
		height: calc(100vh - $vert-padding * 2);
		height: calc(100dvh - $vert-padding * 2);

		.nav-toggle {
			position: fixed;
			left: calc((var(--nav-width) - $icon-width) / 2);
			top: $vert-padding;
			z-index: 9999;
			width: $icon-width;
		}

		.placeholder {
			opacity: 0;
		}

		svg {
			width: $icon-width;
			fill: var(--glyph-standard);
		}

		button {
			line-height: 0;
		}

		.directory {
			display: flex;
			flex-direction: column;
			row-gap: 25px;

			a {
				$flush-left: calc((var(--nav-width) - $icon-width) / -2);
				position: relative;

				&:after {
					content: '';
					position: absolute;
					left: calc($flush-left - 1px);
					height: 100%;
					border-left: 1px solid var(--glyph-standard);
					transition: left 200ms ease-out;
				}

				// current page
				&:is([aria-current]) {
					opacity: 1;

					&:after {
						left: calc($flush-left + 4px);
					}

					&:hover:after {
						left: calc($flush-left + 5px);
					}
				}

				// inactive pages
				&:not([aria-current]) {
					opacity: 0.5;

					&:hover:after {
						left: calc($flush-left + 4px);
					}
				}
			}
		}
	}
</style>

<script>
	const navLinks = document.querySelectorAll('[data-navLink]');
	const navToggle = document.querySelector('.nav-toggle');
	const nav = document.getElementById('primary-nav');

	// add aria-current attribute to current page icon
	navLinks.forEach((link) => {
		if (link.getAttribute('href') === window.location.pathname) {
			link.setAttribute('aria-current', 'page');
		}
	});

	// toggle aria-expanded, aria-hidden, and tabindex when nav is toggled
	navToggle.addEventListener('click', () => {
		const isAriaExpanded = nav.getAttribute('aria-expanded');

		if (isAriaExpanded === 'false') {
			nav.setAttribute('aria-expanded', 'true');
			navLinks.forEach((link) => {
				link.removeAttribute('tabindex');
				link.removeAttribute('aria-hidden');
			});
		} else {
			nav.setAttribute('aria-expanded', 'false');
			navLinks.forEach((link) => {
				link.setAttribute('tabindex', '-1');
				link.setAttribute('aria-hidden', 'true');
			});
		}
	});
</script>
